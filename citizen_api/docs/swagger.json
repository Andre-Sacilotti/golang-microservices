{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/citizen": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Citizen"
                ],
                "summary": "Get a list of citizens",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Offset for pagination in request",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit how many citizens will be returned",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/delivery.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Citizen"
                ],
                "summary": "Insert a new citizen data",
                "parameters": [
                    {
                        "description": "Citizen can have many addresses and debts",
                        "name": "citizen_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Citizen"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/delivery.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/citizen/{CPF}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Citizen"
                ],
                "summary": "Get a citizen data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Citizen CPF to return ",
                        "name": "CPF",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/delivery.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Citizen"
                ],
                "summary": "Update citizen data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Citizen CPF to update",
                        "name": "CPF",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/delivery.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/citizen/{CPF}/address": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Citizen"
                ],
                "summary": "Get a list of address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CPF of the address",
                        "name": "CPF",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/delivery.ResponseAddress"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Citizen"
                ],
                "summary": "Insert a new Address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CPF of the citizen",
                        "name": "CPF",
                        "in": "path"
                    },
                    {
                        "description": "Address data",
                        "name": "address_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Address"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/delivery.ResponseAddress"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/citizen/{CPF}/address/{ID}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Citizen"
                ],
                "summary": "Update a specific Address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CPF of the citizen",
                        "name": "CPF",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Id of the Address",
                        "name": "ID",
                        "in": "path"
                    },
                    {
                        "description": "Address data",
                        "name": "address_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Address"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/delivery.ResponseAddress"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Citizen"
                ],
                "summary": "Delete a specific Address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CPF of the citizen",
                        "name": "CPF",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Id of the Address",
                        "name": "ID",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/delivery.ResponseAddress"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/citizen/{CPF}/debts": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Citizen"
                ],
                "summary": "Get a list of debts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CPF of the citizen",
                        "name": "CPF",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/delivery.ResponseDebt"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Citizen"
                ],
                "summary": "Insert a new debt",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CPF of the citizen",
                        "name": "CPF",
                        "in": "path"
                    },
                    {
                        "description": "Debt data",
                        "name": "debt_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Debt"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/delivery.ResponseDebt"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/citizen/{CPF}/debts/{ID}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Citizen"
                ],
                "summary": "Update a specific debt",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CPF of the citizen",
                        "name": "CPF",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Id of the debt",
                        "name": "ID",
                        "in": "path"
                    },
                    {
                        "description": "Debt data",
                        "name": "debt_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Debt"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/delivery.ResponseDebt"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Citizen"
                ],
                "summary": "Delete a specific debt",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CPF of the citizen",
                        "name": "CPF",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Id of the debt",
                        "name": "ID",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/delivery.ResponseDebt"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "delivery.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "delivery.Response": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Citizen"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "delivery.ResponseAddress": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Address"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "delivery.ResponseDebt": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Debt"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "domain.Address": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "citizen_id": {
                    "type": "integer"
                },
                "city": {
                    "type": "string"
                },
                "complement": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "deleted": {
                    "type": "boolean",
                    "default": false
                },
                "id": {
                    "type": "integer"
                },
                "neighbourhood": {
                    "type": "string"
                },
                "number": {
                    "type": "string",
                    "default": "false"
                },
                "postal_code": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "domain.Citizen": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Address"
                    }
                },
                "cpf": {
                    "type": "string"
                },
                "debts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Debt"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "domain.Debt": {
            "type": "object",
            "properties": {
                "credit_taken_at": {
                    "type": "string"
                },
                "credit_turned_debit_at": {
                    "type": "string"
                },
                "debtor_id": {
                    "type": "integer"
                },
                "deleted": {
                    "type": "boolean",
                    "default": false
                },
                "id": {
                    "type": "integer"
                },
                "value": {
                    "type": "number"
                },
                "was_negociated": {
                    "type": "boolean",
                    "default": false
                }
            }
        }
    }
}